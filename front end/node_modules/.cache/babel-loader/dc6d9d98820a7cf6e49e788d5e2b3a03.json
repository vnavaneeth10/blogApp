{"ast":null,"code":"//Validation Function\nfunction Validation(values) {\n  //values = formValues (useState)\n  // storing error\n  const errors = {};\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n  if (!values.username) {\n    errors.username = \"Username is required\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  } else if (!regex.test(values.email)) {\n    errors.email = \"Email is invalid\";\n  } // values are coming from formValues, so same key shud b used here\n  // but errors is a new empty obj, so anything can b used pwd/password\n\n\n  if (!values.pwd) {\n    errors.password = \"Password is required\";\n  } else if (values.pwd.length < 5) {\n    errors.password = \"Password is too short\";\n  }\n\n  return errors;\n}\n\n_c = Validation;\nexport default Validation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"sources":["C:/Users/91938/blogApp/front end/src/component/logs/Validation.js"],"names":["Validation","values","errors","regex","username","email","test","pwd","password","length"],"mappings":"AAAA;AACA,SAASA,UAAT,CAAoBC,MAApB,EAA4B;AAAE;AAC1B;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,KAAK,GAAG,gCAAd;;AAEA,MAAI,CAACF,MAAM,CAACG,QAAZ,EAAsB;AAClBF,IAAAA,MAAM,CAACE,QAAP,GAAkB,sBAAlB;AACH;;AACD,MAAI,CAACH,MAAM,CAACI,KAAZ,EAAmB;AACfH,IAAAA,MAAM,CAACG,KAAP,GAAe,mBAAf;AACH,GAFD,MAGK,IAAI,CAACF,KAAK,CAACG,IAAN,CAAWL,MAAM,CAACI,KAAlB,CAAL,EAA+B;AAChCH,IAAAA,MAAM,CAACG,KAAP,GAAe,kBAAf;AACH,GAbuB,CAcxB;AACA;;;AACA,MAAI,CAACJ,MAAM,CAACM,GAAZ,EAAiB;AACbL,IAAAA,MAAM,CAACM,QAAP,GAAkB,sBAAlB;AACH,GAFD,MAIK,IAAIP,MAAM,CAACM,GAAP,CAAWE,MAAX,GAAoB,CAAxB,EAA2B;AAC5BP,IAAAA,MAAM,CAACM,QAAP,GAAkB,uBAAlB;AACH;;AACD,SAAON,MAAP;AAEH;;KAzBQF,U;AA2BT,eAAeA,UAAf","sourcesContent":["//Validation Function\r\nfunction Validation(values) { //values = formValues (useState)\r\n    // storing error\r\n    const errors = {};\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n\r\n    if (!values.username) {\r\n        errors.username = \"Username is required\";\r\n    }\r\n    if (!values.email) {\r\n        errors.email = \"Email is required\";\r\n    }\r\n    else if (!regex.test(values.email)) {\r\n        errors.email = \"Email is invalid\";\r\n    }\r\n    // values are coming from formValues, so same key shud b used here\r\n    // but errors is a new empty obj, so anything can b used pwd/password\r\n    if (!values.pwd) {\r\n        errors.password = \"Password is required\";\r\n    }\r\n    \r\n    else if (values.pwd.length < 5) {\r\n        errors.password = \"Password is too short\";\r\n    }\r\n    return errors;\r\n\r\n}\r\n\r\nexport default Validation;"]},"metadata":{},"sourceType":"module"}