{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91938\\\\blogApp\\\\front end\\\\src\\\\component\\\\article\\\\Article.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport articleContent from './SampleArticleDB.js';\nimport Error from '../error/Error.js';\nimport Comments from './Comments.js';\nimport UpvoteSection from './UpvoteSection.js';\nimport AddComments from './AddComments.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Article(props) {\n  _s();\n\n  const {\n    name\n  } = useParams(); //Temp storage of DB data (front end)\n\n  const [articleData, setarticleData] = useState({\n    upvotes: 0,\n    comments: []\n  }); //Matching name parameter\n\n  const article = articleContent.find(i => i.name === name); //Backend connection API fetch\n\n  useEffect(() => {\n    fetchAPI();\n  }, [name]); //Backend connection API fetch\n\n  async function fetchAPI() {\n    const response = await fetch(`http://localhost:5001/api/article/:${name}`);\n    const body = await response.json();\n    console.log(body);\n    setarticleData(body);\n  } //Article not exist in DB\n\n\n  if (!article) return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }, this); //if the specified page not available\n  //since we are using sampleContent as DB which is in array form so we used 'find' to iterate among DB\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"article\",\n      children: [\" \", article.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UpvoteSection, {\n      name: name,\n      setarticleData: setarticleData,\n      upvotes: articleData.upvotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"desc\",\n      children: article.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      comments: articleData.comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddComments, {\n      name: name,\n      setarticleData: setarticleData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Article, \"Lxy/xB4vFE4IQGFzEv9ZABxJKbA=\", false, function () {\n  return [useParams];\n});\n\n_c = Article;\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["C:/Users/91938/blogApp/front end/src/component/article/Article.js"],"names":["React","useEffect","useState","useParams","articleContent","Error","Comments","UpvoteSection","AddComments","Article","props","name","articleData","setarticleData","upvotes","comments","article","find","i","fetchAPI","response","fetch","body","json","console","log","title","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAWR,SAAS,EAA1B,CADoB,CAGpB;;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC;AAAEY,IAAAA,OAAO,EAAG,CAAZ;AAAeC,IAAAA,QAAQ,EAAG;AAA1B,GAAD,CAA9C,CAJoB,CAMpB;;AACA,QAAMC,OAAO,GAAGZ,cAAc,CAACa,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACP,IAAF,KAAWA,IAApC,CAAhB,CAPoB,CAWpB;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACbkB,IAAAA,QAAQ;AACV,GAFQ,EAEN,CAACR,IAAD,CAFM,CAAT,CAZoB,CAgBpB;;AACA,iBAAeQ,QAAf,GAA0B;AACvB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCV,IAAK,EAA5C,CAA5B;AACA,UAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAT,IAAAA,cAAc,CAACS,IAAD,CAAd;AAEF,GAvBmB,CAyBpB;;;AAEA,MAAG,CAACN,OAAJ,EAAa,oBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP,CA3BO,CA2BU;AAE9B;;AACA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA,sBAA0BA,OAAO,CAACU,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAIf,IAAvB;AAA6B,MAAA,cAAc,EAAIE,cAA/C;AAA+D,MAAA,OAAO,EAAGD,WAAW,CAACE;AAArF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,oBAGc;AAAA;AAAA;AAAA;AAAA,YAHd,eAII;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,gBAAqBE,OAAO,CAACW;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEf,WAAW,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEJ,IAAnB;AAAyB,MAAA,cAAc,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAxCQJ,O;UACYN,S;;;KADZM,O;AA0CT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport articleContent from './SampleArticleDB.js';\r\nimport Error from '../error/Error.js';\r\nimport Comments from './Comments.js';\r\nimport UpvoteSection from './UpvoteSection.js';\r\nimport AddComments from './AddComments.js';\r\n\r\nfunction Article(props) {\r\n    const { name } = useParams();\r\n  \r\n    //Temp storage of DB data (front end)\r\n    const [articleData, setarticleData] = useState({ upvotes : 0, comments : [] });\r\n    \r\n    //Matching name parameter\r\n    const article = articleContent.find(i => i.name === name);\r\n    \r\n    \r\n\r\n    //Backend connection API fetch\r\n    useEffect(() => {\r\n       fetchAPI();\r\n    }, [name]);\r\n\r\n    //Backend connection API fetch\r\n    async function fetchAPI() {\r\n       const response = await fetch(`http://localhost:5001/api/article/:${name}`);\r\n       const body = await response.json();\r\n       console.log(body);\r\n       setarticleData(body);\r\n       \r\n    }\r\n   \r\n    //Article not exist in DB\r\n\r\n    if(!article) return <Error /> //if the specified page not available\r\n\r\n    //since we are using sampleContent as DB which is in array form so we used 'find' to iterate among DB\r\n    return (\r\n        <div>\r\n            <h1 className='article'> {article.title}</h1>\r\n            <UpvoteSection name = {name} setarticleData = {setarticleData} upvotes ={articleData.upvotes} />\r\n            <br></br> <br></br>\r\n            <p className='desc'>{article.description}</p>\r\n            <Comments comments={articleData.comments} />\r\n            <AddComments name={name} setarticleData={setarticleData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Article;"]},"metadata":{},"sourceType":"module"}