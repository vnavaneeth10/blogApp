{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91938\\\\blogApp\\\\front end\\\\src\\\\component\\\\article\\\\AddComments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddComments(props) {\n  _s();\n\n  const {\n    name,\n    setarticleData\n  } = props; // Storing comments\n\n  const [commentValues, setCommentValues] = useState({\n    username: \"\",\n    comment: \"\"\n  });\n\n  function handleChange(event) {\n    console.log(event.target);\n    const {\n      name,\n      value\n    } = event.target;\n    setCommentValues({ ...commentValues,\n      [name]: value\n    });\n  }\n\n  async function fetchComments() {\n    const username = commentValues.username;\n    const text = commentValues.comment;\n    const response = await fetch(`http://localhost:5001/api/article/${name}/comments`, {\n      method: 'post',\n      body: JSON.stringify({\n        username,\n        text\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const body = await response.json();\n    setarticleData(body);\n    setCommentValues({\n      username: \"\",\n      comment: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: commentValues.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          cols: \"50\",\n          name: \"comment\",\n          value: commentValues.comment,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchComments,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddComments, \"PXpcdMwBO0oSOEmwWJl/TLsFFZA=\");\n\n_c = AddComments;\nexport default AddComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddComments\");","map":{"version":3,"sources":["C:/Users/91938/blogApp/front end/src/component/article/AddComments.js"],"names":["React","useState","AddComments","props","name","setarticleData","commentValues","setCommentValues","username","comment","handleChange","event","console","log","target","value","fetchComments","text","response","fetch","method","body","JSON","stringify","headers","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA2BF,KAAjC,CADwB,CAGxB;;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC;AAAEO,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAD,CAAlD;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,UAAM;AAAEV,MAAAA,IAAF;AAAQW,MAAAA;AAAR,QAAkBJ,KAAK,CAACG,MAA9B;AACAP,IAAAA,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoB,OAACF,IAAD,GAAQW;AAA5B,KAAD,CAAhB;AACH;;AAED,iBAAeC,aAAf,GAA+B;AAC3B,UAAMR,QAAQ,GAAGF,aAAa,CAACE,QAA/B;AACA,UAAMS,IAAI,GAAGX,aAAa,CAACG,OAA3B;AAEA,UAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCf,IAAK,WAA3C,EAAuD;AAC/EgB,MAAAA,MAAM,EAAE,MADuE;AAE/EC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEf,QAAAA,QAAF;AAAYS,QAAAA;AAAZ,OAAf,CAFyE;AAG/EO,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHsE,KAAvD,CAA5B;AAOA,UAAMH,IAAI,GAAG,MAAMH,QAAQ,CAACO,IAAT,EAAnB;AACApB,IAAAA,cAAc,CAACgB,IAAD,CAAd;AACAd,IAAAA,gBAAgB,CAAC;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,OAAO,EAAE;AAAzB,KAAD,CAAhB;AACH;;AAED,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,yCAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,KAAK,EAAEH,aAAa,CAACE,QAAxD;AAAkE,UAAA,QAAQ,EAAEE;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI;AAAA,4CAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAU,UAAA,IAAI,EAAC,GAAf;AAAmB,UAAA,IAAI,EAAC,IAAxB;AAA6B,UAAA,IAAI,EAAC,SAAlC;AAA4C,UAAA,KAAK,EAAEJ,aAAa,CAACG,OAAjE;AAA0E,UAAA,QAAQ,EAAEC;AAApF;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAaI;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AAAQ,QAAA,OAAO,EAAEM,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAhDQd,W;;KAAAA,W;AAkDT,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction AddComments(props) {\r\n    const { name, setarticleData } = props;\r\n\r\n    // Storing comments\r\n    const [commentValues, setCommentValues] = useState({ username: \"\", comment: \"\" });\r\n\r\n    function handleChange(event) {\r\n        console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setCommentValues({ ...commentValues, [name]: value })\r\n    }\r\n\r\n    async function fetchComments() {\r\n        const username = commentValues.username;\r\n        const text = commentValues.comment;\r\n\r\n        const response = await fetch(`http://localhost:5001/api/article/${name}/comments`, {\r\n            method: 'post',\r\n            body: JSON.stringify({ username, text }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const body = await response.json();\r\n        setarticleData(body);\r\n        setCommentValues({ username: \"\", comment: \"\" });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='add-comment'>\r\n                <h3>Add a Comment</h3>\r\n                <br></br>\r\n                <label>\r\n                    Name:\r\n                    <br></br>\r\n                    <input type=\"text\" name=\"username\" value={commentValues.username} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Comment:\r\n                    <br></br>\r\n                    <textarea rows=\"4\" cols=\"50\" name='comment' value={commentValues.comment} onChange={handleChange}></textarea>\r\n                </label>\r\n                <br></br>\r\n                <button onClick={fetchComments}>Submit</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddComments;"]},"metadata":{},"sourceType":"module"}