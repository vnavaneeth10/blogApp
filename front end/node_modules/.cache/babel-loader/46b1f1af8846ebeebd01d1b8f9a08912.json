{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/91938/blogApp/front end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"C:/Users/91938/blogApp/front end/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/91938/blogApp/front end/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/91938/blogApp/front end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\91938\\\\blogApp\\\\front end\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AddComments(props){var name=props.name,setarticleData=props.setarticleData;// Storing comments\nvar _useState=useState({username:\"\",comment:\"\"}),_useState2=_slicedToArray(_useState,2),commentValues=_useState2[0],setCommentValues=_useState2[1];function handleChange(event){console.log(event.target);var _event$target=event.target,name=_event$target.name,value=_event$target.value;setCommentValues(_objectSpread(_objectSpread({},commentValues),{},_defineProperty({},name,value)));}function fetchComments(){return _fetchComments.apply(this,arguments);}function _fetchComments(){_fetchComments=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var username,text,response,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:username=commentValues.username;text=commentValues.comment;_context.next=4;return fetch(\"http://localhost:5001/api/article/\".concat(name,\"/comments\"),{method:'post',body:JSON.stringify({username:username,text:text}),headers:{'Content-Type':'application/json'}});case 4:response=_context.sent;_context.next=7;return response.json();case 7:body=_context.sent;setarticleData(body);setCommentValues({username:\"\",comment:\"\"});//to reset the comments\ncase 10:case\"end\":return _context.stop();}}},_callee);}));return _fetchComments.apply(this,arguments);}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"add-comment\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add a Comment\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Name:\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:commentValues.username,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Comment:\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{rows:\"4\",cols:\"50\",name:\"comment\",value:commentValues.comment,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchComments,children:\"Submit\"})]})});}export default AddComments;","map":{"version":3,"sources":["C:/Users/91938/blogApp/front end/src/component/article/AddComments.js"],"names":["React","useState","AddComments","props","name","setarticleData","username","comment","commentValues","setCommentValues","handleChange","event","console","log","target","value","fetchComments","text","fetch","method","body","JSON","stringify","headers","response","json"],"mappings":"2lBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,wFAEA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CACxB,GAAQC,CAAAA,IAAR,CAAiCD,KAAjC,CAAQC,IAAR,CAAcC,cAAd,CAAiCF,KAAjC,CAAcE,cAAd,CAEA;AACA,cAA0CJ,QAAQ,CAAC,CAAEK,QAAQ,CAAE,EAAZ,CAAgBC,OAAO,CAAE,EAAzB,CAAD,CAAlD,wCAAOC,aAAP,eAAsBC,gBAAtB,eAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CACzBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB,EACA,kBAAwBH,KAAK,CAACG,MAA9B,CAAQV,IAAR,eAAQA,IAAR,CAAcW,KAAd,eAAcA,KAAd,CACAN,gBAAgB,gCAAMD,aAAN,wBAAsBJ,IAAtB,CAA6BW,KAA7B,GAAhB,CACH,CAVuB,QAYTC,CAAAA,aAZS,iJAYxB,mKACUV,QADV,CACqBE,aAAa,CAACF,QADnC,CAEUW,IAFV,CAEiBT,aAAa,CAACD,OAF/B,uBAI2BW,CAAAA,KAAK,6CAAsCd,IAAtC,cAAuD,CAC/Ee,MAAM,CAAE,MADuE,CAE/EC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEhB,QAAQ,CAARA,QAAF,CAAYW,IAAI,CAAJA,IAAZ,CAAf,CAFyE,CAG/EM,OAAO,CAAE,CACL,eAAgB,kBADX,CAHsE,CAAvD,CAJhC,QAIUC,QAJV,qCAWuBA,CAAAA,QAAQ,CAACC,IAAT,EAXvB,QAWUL,IAXV,eAYIf,cAAc,CAACe,IAAD,CAAd,CACAX,gBAAgB,CAAC,CAAEH,QAAQ,CAAE,EAAZ,CAAgBC,OAAO,CAAE,EAAzB,CAAD,CAAhB,CAAgD;AAbpD,uDAZwB,gDA4BxB,mBACI,kCACI,aAAK,SAAS,CAAC,aAAf,wBACI,qCADJ,cAEI,aAFJ,cAGI,8CAEI,aAFJ,cAGI,cAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,UAAxB,CAAmC,KAAK,CAAEC,aAAa,CAACF,QAAxD,CAAkE,QAAQ,CAAEI,YAA5E,EAHJ,GAHJ,cAQI,iDAEI,aAFJ,cAGI,iBAAU,IAAI,CAAC,GAAf,CAAmB,IAAI,CAAC,IAAxB,CAA6B,IAAI,CAAC,SAAlC,CAA4C,KAAK,CAAEF,aAAa,CAACD,OAAjE,CAA0E,QAAQ,CAAEG,YAApF,EAHJ,GARJ,cAaI,aAbJ,cAcI,eAAQ,OAAO,CAAEM,aAAjB,oBAdJ,GADJ,EADJ,CAoBH,CAED,cAAed,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction AddComments(props) {\r\n    const { name, setarticleData } = props;\r\n\r\n    // Storing comments\r\n    const [commentValues, setCommentValues] = useState({ username: \"\", comment: \"\" });\r\n\r\n    function handleChange(event) {\r\n        console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setCommentValues({ ...commentValues, [name]: value }) \r\n    }\r\n\r\n    async function fetchComments() {\r\n        const username = commentValues.username;\r\n        const text = commentValues.comment;\r\n\r\n        const response = await fetch(`http://localhost:5001/api/article/${name}/comments`, {\r\n            method: 'post',\r\n            body: JSON.stringify({ username, text }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const body = await response.json();\r\n        setarticleData(body);\r\n        setCommentValues({ username: \"\", comment: \"\" });//to reset the comments\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='add-comment'>\r\n                <h3>Add a Comment</h3>\r\n                <br></br>\r\n                <label>\r\n                    Name:\r\n                    <br></br>\r\n                    <input type=\"text\" name=\"username\" value={commentValues.username} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Comment:\r\n                    <br></br>\r\n                    <textarea rows=\"4\" cols=\"50\" name='comment' value={commentValues.comment} onChange={handleChange}></textarea>\r\n                </label>\r\n                <br></br>\r\n                <button onClick={fetchComments}>Submit</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddComments;"]},"metadata":{},"sourceType":"module"}